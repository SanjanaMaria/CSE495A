# -*- coding: utf-8 -*-
"""cse495A_HW1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f3hSTXMi3Zc__H-pqlFGHnF6wd4qfHwY
"""

import numpy as np
import matplotlib. pyplot as plt
from matplotlib. animation import FuncAnimation

T= 10 #move for 10s
dt = 0.1
t=np.arange(0,T+0.1, dt)
#t =np.arange(0,10+0.1,0.1) time array (start, end+0.1, timestep) print(t)
x = np.zeros(len(t))
y = np.zeros(len(t))
q = np.zeros(len(t)) #theta
w = np.zeros(len(t))
#setting cotrol won given coditions
for i, ti in enumerate(t):
  if 0.5 <=ti <= 1.5:
    w[i]= 3
  elif 2 <= ti <= 3:
    w[i] = -3
  elif 4 <= ti <=5:
    w[i] = 3
  elif 6<= ti <=7:
    w[i] = -3
  elif 8<= ti <=9:
    w[i] = 3
  #else: not need
   # w[i] = 0

#print(w)

#initial conditions
x[0] = 0
y[0] = 0
q[0] = 1

for i in range(len(t)-1): # first value declear so -q
  v = 1
  #x[t + del t] = x[t] + del t * x dot
  x[i + 1] = x[i] + dt * v * np.cos(q[i])
  y[i + 1] = y[i] + dt * v * np.sin(q[i])
  q[i + 1] = q[i] + dt * w[i]

#print(x)

#plot
plt.figure(figsize=(14,10))
plt.subplot(2,2,1)
plt.plot(x,y)
plt.xlabel('x')
plt.ylabel('y')
plt.title('X vs y')

plt.subplot(2,2,2)
plt.plot(x,t)
plt.xlabel('x')
plt.ylabel('t')
plt.title('X vs t')

plt.subplot(2,2,3)
plt.plot(y,t)
plt.xlabel('y')
plt.ylabel('t')
plt.title('y vs t')

plt.subplot(2,2,4)
plt.plot(q,t)
plt.xlabel('theta')
plt.ylabel('t')
plt.title('Theta vs y')

#Animation
fig, ax=plt.subplots()
ax.set_xlim(min(x),max(x))
ax.set_ylim(min(y),max(y))
line, =ax.plot([],[],lw=2)

def initialize():
  line.set_data([],[])
  return line,

def update (frame):
  xdata = x[:frame]
  ydata = y[:frame]
  line.set_data(xdata, ydata)
  return line,

ani = FuncAnimation(fig, update, frames=range(0,len(t)),init_func=initialize, blit=True)

from IPython.display import HTML
HTML(ani.to_jshtml())

T= 10 #move for 10s
dt = 0.1
t=np.arange(0,T+0.1, dt)
#t =np.arange(0,10+0.1,0.1) time array (start, end+0.1, timestep) print(t)
x = np.zeros(len(t))
y = np.zeros(len(t))
q = np.zeros(len(t)) #theta
wl = np.zeros(len(t))
wr = np.zeros(len(t))
#setting cotrol won given coditions
for i, ti in enumerate(t):
  if 2 <=ti <=3:
    wl[i]= 20
  elif 6 <= ti <= 7.5:
    w[i] = 20
  else:
    w[i] = 5


for i, ti in enumerate(t):
  if 4 <=ti <=5:
    wr[i]= 20
  elif 8.5 <= ti <= 9:
    w[i] = 20
  else:
    w[i] = 5


#initial conditions
x[0] = 0
y[0] = 0
q[0] = 1

for i in range(len(t)-1): # first value declear so -q
  r = 0.1
  L = 0.9
  #x[t + del t] = x[t] + del t * x dot
  x[i + 1] = x[i] + dt * (((r/2)*np.cos(q[i])*wr[i])+((r/2)*np.cos(q[i])*wl[i]))
  y[i + 1] = y[i] + dt * (((r/2)*np.sin(q[i])*wr[i])+((r/2)*np.sin(q[i])*wl[i]))
  q[i + 1] = q[i] + dt * (((r/L)*wr[i])-((r/L)*wl[i]))

#print(x)

#plot
plt.figure(figsize=(14,10))
plt.subplot(2,2,1)
plt.plot(x,y)
plt.xlabel('x')
plt.ylabel('y')
plt.title('X vs y')

plt.subplot(2,2,2)
plt.plot(x,t)
plt.xlabel('x')
plt.ylabel('t')
plt.title('X vs t')

plt.subplot(2,2,3)
plt.plot(y,t)
plt.xlabel('y')
plt.ylabel('t')
plt.title('y vs t')

plt.subplot(2,2,4)
plt.plot(q,t)
plt.xlabel('theta')
plt.ylabel('t')
plt.title('Theta vs y')



#Animation
fig, ax=plt.subplots()
ax.set_xlim(min(x),max(x))
ax.set_ylim(min(y),max(y))
line, =ax.plot([],[],lw=2)

def initialize():
  line.set_data([],[])
  return line,

def update (frame):
  xdata = x[:frame]
  ydata = y[:frame]
  line.set_data(xdata, ydata)
  return line,

ani = FuncAnimation(fig, update, frames=range(0,len(t)),init_func=initialize, blit=True)

from IPython.display import HTML
HTML(ani.to_jshtml())